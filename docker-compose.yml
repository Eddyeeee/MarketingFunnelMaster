version: '3.8'

services:
  # ===== DEVELOPMENT ENVIRONMENT =====
  app-dev:
    build:
      context: .
      target: development
    container_name: q-money-dev
    ports:
      - "3000:3000"
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - dev

  # ===== PRODUCTION ENVIRONMENT =====
  app-prod:
    build:
      context: .
      target: production
    container_name: q-money-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== DATABASE (OPTIONAL) =====
  postgres:
    image: postgres:15-alpine
    container_name: q-money-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=qmoney
      - POSTGRES_USER=qmoney
      - POSTGRES_PASSWORD=secure_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - db
      - full

  # ===== REDIS CACHE =====
  redis:
    image: redis:7-alpine
    container_name: q-money-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - cache
      - full
    command: redis-server --appendonly yes

  # ===== NGINX REVERSE PROXY =====
  nginx:
    image: nginx:alpine
    container_name: q-money-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app-prod
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - proxy
      - full

  # ===== MONITORING =====
  prometheus:
    image: prom/prometheus:latest
    container_name: q-money-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - monitoring
      - full

  grafana:
    image: grafana/grafana:latest
    container_name: q-money-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_change_me
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - q-money-network
    restart: unless-stopped
    profiles:
      - monitoring
      - full

networks:
  q-money-network:
    driver: bridge
    name: q-money-network

volumes:
  postgres_data:
    name: q-money-postgres-data
  redis_data:
    name: q-money-redis-data
  prometheus_data:
    name: q-money-prometheus-data
  grafana_data:
    name: q-money-grafana-data

# ===== USAGE EXAMPLES =====
# Development: docker-compose --profile dev up
# Production:  docker-compose --profile prod up -d
# With DB:     docker-compose --profile prod --profile db up -d
# Full Stack:  docker-compose --profile full up -d 